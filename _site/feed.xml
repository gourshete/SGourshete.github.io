<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-09-28T23:17:00+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ruby on Rails Examples</title><subtitle>Exploring Rails</subtitle><entry><title type="html">What is self in Ruby?</title><link href="http://localhost:4000/self-keyword-in-ruby/" rel="alternate" type="text/html" title="What is self in Ruby?" /><published>2023-09-08T00:00:00+05:30</published><updated>2023-09-08T00:00:00+05:30</updated><id>http://localhost:4000/self-keyword-in-ruby</id><content type="html" xml:base="http://localhost:4000/self-keyword-in-ruby/">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; is a keyword in ruby which means it is reserved by Ruby to serve a specific purpose and we cannot use it like regular variables (although you can override it, but you shouldn’t).&lt;/p&gt;

&lt;h2 id=&quot;what-is-self-in-ruby&quot;&gt;What is &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; in Ruby?&lt;/h2&gt;
&lt;p&gt;Behaviour of self depends on what context it is defined. &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; can represent instance of class or the class itself. Let’s understand through examples.&lt;/p&gt;

&lt;h3 id=&quot;1-within-method&quot;&gt;1. within method&lt;/h3&gt;
&lt;p&gt;In this case, self represents the current instance of the class. It will be different for different instances of the class and will not intervene any proceedings between them.&lt;/p&gt;

&lt;h5 id=&quot;example-1&quot;&gt;Example 1:&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RailsExamples&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;__id__&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:1:0&amp;gt; obj &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; RailsExamples.new
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:2:0&amp;gt; obj.method1
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:3:0&amp;gt; 460060
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:4:0&amp;gt; 
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:5:0&amp;gt; obj.__id__
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:6:0&amp;gt; 460060
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:7:0&amp;gt; 
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:8:0&amp;gt; obj.method1 &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; RailsExamples.new.method1
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:9:0&amp;gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-within-class&quot;&gt;2. Within class&lt;/h3&gt;
&lt;p&gt;In this case &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; will represent the class itself. It will return the Class object under which it is defined. Let’s understand through example -&lt;/p&gt;

&lt;h5 id=&quot;example-2&quot;&gt;Example 2:&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RailsExamples&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;__id__&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;method2&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;__id__&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:1:0&amp;gt; RailsExamples.method2
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 992600
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:2:0&amp;gt; RailsExamples.method2
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 992600
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:3:0&amp;gt; RailsExamples.__id__
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 992600
irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:4:0&amp;gt; RailsExamples.new.method1.__id__
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 2052721
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-outside-any-context&quot;&gt;3. Outside any context&lt;/h3&gt;
&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; is called outside any class or method, it refers the main object (the top-level context).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;irb&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:218:0&amp;gt; p self
main
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy Coding!!!&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://railsexamples.com/keywords-in-ruby/&quot;&gt;keywords in Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">self is a keyword in ruby which means it is reserved by Ruby to serve a specific purpose and we cannot use it like regular variables (although you can override it, but you shouldn’t).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/railsexamples-com-self.png" /></entry><entry><title type="html">Keywords in Ruby</title><link href="http://localhost:4000/keywords-in-ruby/" rel="alternate" type="text/html" title="Keywords in Ruby" /><published>2023-09-04T00:00:00+05:30</published><updated>2023-09-04T00:00:00+05:30</updated><id>http://localhost:4000/keywords-in-ruby</id><content type="html" xml:base="http://localhost:4000/keywords-in-ruby/">&lt;p&gt;Keywords are special words in Ruby which are reserved by the language and have predefined uses. Each keyword serves a different implementation than other. Let’s dive into these keywords and understand their definitions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;BEGIN&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Code inside BEGIN will run before any other code written in the current file.
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;END&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Code inside END will run after any other code written in the current file
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;alias&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;alias helps to create an alias between two methods and	It has lower precedence than &amp;amp;&amp;amp; and is for short-circuit boolean
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;begin&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;This Ruby keyword helps us to start an exception handling block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;break&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps to leave a block early
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;case&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;This Ruby keyword helps to start a case expression
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;class&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;class helps user to create or opens a class in ruby
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;def&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;def keyword in ruby helps us to define a function
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;defined?&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Defined? It describes its argument by returning a string 
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;do&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;This Ruby keyword helps to start a block of code
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;else&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Else is the unhandled condition in if and unless expression
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;elsif&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Elsif helps the user to give alternate conditions to if expression
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;end&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;methods, modules, classes etc, use end. It indicates the end of a syntax block
false	False here means boolean false 
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;ensure&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;ensure is a block of code that will always run when an exception is raised
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;for&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;To help us to create a loop for iteration
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;if&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Used as an expression for if or modifiers if
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;in&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps to separate iterable Objects and iterable variables in a for loop
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;module&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Helps us in creating or opening module
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;next&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Lets the user skips the rest of the code in the block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;nil&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Nil represents false value indicating “no value” or “unknown.”
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;not&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It inverts the boolean expression but has less precedence than “!”
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;or&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It represents boolean or with less precedence than “||”
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;redo&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Redo helps to restart execution in the present block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;rescue&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps to start an exception section of code in a beginning block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;retry&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps us to retries an exception block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;return&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;To exit from a method
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;self&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Helps in calling Object of current method attached to
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;super&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps in calling the current method in a superclass
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;then&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;In control structure, It represents the end of the conditional block
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;true&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;true here is just a simple boolean true expression
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;undef&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps in preventing module or class from responding to the method call
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;unless&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It helps in creating unless and modifiers unless expressions
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;until&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Help us to create an iterative loop until a condition is met
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;when&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;it helps by representing a condition in a case expression
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;while&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;Help us to create an iterative loop while a condition is true
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;yield&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;yield Helps to start execution of block send to the current method
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;em&gt;ENCODING&lt;/em&gt;&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It represents script encoding of the current file
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;em&gt;LINE&lt;/em&gt;&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It represents the line number of keywords in the current file
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;em&gt;FILE&lt;/em&gt;&lt;/span&gt; -
    &lt;ul&gt;
      &lt;li&gt;It represents the path to the current file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding!!!&lt;/p&gt;</content><author><name>swapnil</name></author><summary type="html">Keywords are special words in Ruby which are reserved by the language and have predefined uses. Each keyword serves a different implementation than other. Let’s dive into these keywords and understand their definitions.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/keywords.jpeg" /></entry><entry><title type="html">What is libpq?</title><link href="http://localhost:4000/what-is-libpq/" rel="alternate" type="text/html" title="What is libpq?" /><published>2023-07-03T00:00:00+05:30</published><updated>2023-07-03T00:00:00+05:30</updated><id>http://localhost:4000/what-is-libpq</id><content type="html" xml:base="http://localhost:4000/what-is-libpq/">&lt;p&gt;You might have heard about libpq while installing/operating &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql&lt;/code&gt;. But what is &lt;code class=&quot;highlighter-rouge&quot;&gt;libpq&lt;/code&gt;? Let’s understand.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!--- Define --&gt;

&lt;h2 id=&quot;what-is-libpq&quot;&gt;What is libpq?&lt;/h2&gt;
&lt;p&gt;libpq is a library that helps app to communicate with postgresql backend server. It is C application programmer’s interface. It helps in passing on queries and returning the result.&lt;/p&gt;

&lt;h3 id=&quot;also&quot;&gt;Also&lt;/h3&gt;
&lt;p&gt;As per Postgresql docs -&lt;/p&gt;

&lt;p&gt;libpq is also the underlying engine for several other PostgreSQL application interfaces, including those  written for C++, Perl, Python, Tcl and ECPG. So some aspects of libpq behavior will be important to you if you use one of those packages. In particular, Section 34.15, Section 34.16 and Section 34.19 describe behavior that is visible to the user of any application that uses libpq.&lt;/p&gt;

&lt;!-- Layman words explaination, if possible --&gt;

&lt;h2 id=&quot;when-it-is-used&quot;&gt;When it is used?&lt;/h2&gt;
&lt;p&gt;If you have Postgresql on your setup, then libpq will be needed and used as underlying interface to communicate with Postgresql backend server.&lt;/p&gt;

&lt;h3 id=&quot;how-to-install-libpq&quot;&gt;How to install libpq?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;On Mac OS
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libpq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;On Ubuntu
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libpq-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;issues-if-not-installed&quot;&gt;Issues if not installed&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/libpq-error.png&quot; alt=&quot;libpq-error-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; Installation of &lt;code class=&quot;highlighter-rouge&quot;&gt;libpq&lt;/code&gt; should resolve this error. If you are still facing an issue, you might need to add libpq to path. Following is example for command terminal which uses zshrc.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;/usr/local/opt/libpq/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;code-example-to-connect-and-print-hello-world&quot;&gt;Code Example to connect and print hello world&lt;/h3&gt;
&lt;p&gt;Code example -&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;libpq-fe.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;exit_nicely&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PGconn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PQfinish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conninfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PGconn&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PGresult&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conninfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conninfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dbname=postgres&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Connect to the database */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PQconnectdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conninfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Verify success of database connection */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PQstatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONNECTION_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Connection to database failed: %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;PQerrorMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit_nicely&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Execute a simple query and display the results */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PQexec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SELECT 'Hello World'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PQgetvalue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;PQclear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* close the connection to the database and cleanup */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PQfinish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/libpq.html&quot;&gt;Postgresql libpq documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pgpedia.info/l/libpq.html&quot;&gt;Code reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">You might have heard about libpq while installing/operating postgresql. But what is libpq? Let’s understand.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/libpq.png" /></entry><entry><title type="html">Polymorphic Associations in Rails</title><link href="http://localhost:4000/polymorphic-associations/" rel="alternate" type="text/html" title="Polymorphic Associations in Rails" /><published>2023-06-19T00:00:00+05:30</published><updated>2023-06-19T00:00:00+05:30</updated><id>http://localhost:4000/polymorphic-associations</id><content type="html" xml:base="http://localhost:4000/polymorphic-associations/">&lt;!--- Define --&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-is-the-usecase&quot;&gt;What is the usecase?&lt;/h2&gt;
&lt;p&gt;Suppose two models can be associated to a third model with a common attribute. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;Image&lt;/code&gt; can belong to &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; as well as &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;, because user will have self image and product will have descriptive images of product.
This can be achieved with Polymorphic associations - Two or more models can be associated to third model using single association.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-it&quot;&gt;How to use it?&lt;/h2&gt;
&lt;p&gt;Let’s understand how to use it. There are two parts -&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Migration defining two fields on the model which will have work as base model. It will have &lt;code class=&quot;highlighter-rouge&quot;&gt;association_id&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;association_type&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Defining associations in models.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And we are ready to use it.&lt;/p&gt;

&lt;p&gt;Lets understand through code example.&lt;/p&gt;

&lt;h2 id=&quot;code-example&quot;&gt;Code Example&lt;/h2&gt;
&lt;p&gt;Suppose we have three models - Picture, User, Product. We need specify polymorphic association at
&lt;code class=&quot;highlighter-rouge&quot;&gt;pictures&lt;/code&gt; table creation&lt;/p&gt;

&lt;h4 id=&quot;1-migration&quot;&gt;1. Migration&lt;/h4&gt;
&lt;p&gt;We will add two fields &lt;code class=&quot;highlighter-rouge&quot;&gt;imageable_type&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;imageable_id&lt;/code&gt;.
&lt;img src=&quot;/assets/images/poly-1.png&quot; alt=&quot;class-inheritance-example&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-model-associations-changes&quot;&gt;2. Model associations changes&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/poly-2.png&quot; alt=&quot;class-inheritance-example&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-if-we-do-not-use-polymorphic&quot;&gt;What if we do not use Polymorphic?&lt;/h2&gt;
&lt;p&gt;We will have to create two tables representing &lt;code class=&quot;highlighter-rouge&quot;&gt;User-Image&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Product-Image&lt;/code&gt; associations. That will be
storing same attributes in two tables except &lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;product_id&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;benefits&quot;&gt;Benefits&lt;/h2&gt;
&lt;p&gt;The setup provides easy access to associated models.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;From an instance of the User model, you can retrieve a collection of pictures: &lt;code class=&quot;highlighter-rouge&quot;&gt;@user.pictures&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Similarly, you can retrieve &lt;code class=&quot;highlighter-rouge&quot;&gt;@product.pictures&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If you have an instance of the Picture model, you can get to its parent via &lt;code class=&quot;highlighter-rouge&quot;&gt;@picture.imageable&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Polymorphic association helps in making your code DRY(Do not Repeat Yourself)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;can-we-test-polymorphic-associations&quot;&gt;Can we test polymorphic associations?&lt;/h2&gt;
&lt;p&gt;Yes, of course. I am using &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt; for unit testing instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;minitest&lt;/code&gt;. It can be installed from here
&lt;a href=&quot;https://github.com/rspec/rspec-rails&quot; target=&quot;_blank&quot;&gt;install rails rspec&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you had not installed rspec previously, run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails generate rspec:model user
      create  spec/models/user_spec.rb

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails generate rspec:model product
      create  spec/models/product_spec.rb

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails generate rspec:model picture
      create  spec/models/picture_spec.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we have empty rspec files for models. Let’s add following code to picture model rspec file
&lt;img src=&quot;/assets/images/poly-rspec.png&quot; alt=&quot;polymorphic-rspec-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And when we run this spec file
&lt;img src=&quot;/assets/images/poly-run-rspec.png&quot; alt=&quot;polymorphic-rspec-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It will pass with flying colors!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/association_basics.html#polymorphic-associations&quot;&gt;Rails documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rspec/rspec-rails&quot;&gt;rspec-rails&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">. What is the usecase? Suppose two models can be associated to a third model with a common attribute. For example, Image can belong to User as well as Product, because user will have self image and product will have descriptive images of product. This can be achieved with Polymorphic associations - Two or more models can be associated to third model using single association.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/poly-main.png" /></entry><entry><title type="html">Multiple Inheritance in Ruby</title><link href="http://localhost:4000/ruby-modules-mixins-inheritance/" rel="alternate" type="text/html" title="Multiple Inheritance in Ruby" /><published>2023-05-09T00:00:00+05:30</published><updated>2023-05-09T00:00:00+05:30</updated><id>http://localhost:4000/ruby-modules-mixins-inheritance</id><content type="html" xml:base="http://localhost:4000/ruby-modules-mixins-inheritance/">&lt;p&gt;&lt;em&gt;In this post we will learn about multiple inheritance in ruby&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Multiple Inheritance?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is property of code to inherit from multiple parent classes. Ruby supports inheriting only from one parent class.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/class-1.png&quot; alt=&quot;class-inheritance-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So what is the way for inheriting from multiple classes? By the way are you aware of classic diamond problem in
mulitple inheritance? &lt;a href=&quot;https://en.wikipedia.org/wiki/Multiple_inheritance&quot;&gt;If not, read more about it here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here comes in play modules in Ruby. Modules are somewhat different than classes -&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Modules can’t be instantiated, class can be instantiated&lt;/li&gt;
  &lt;li&gt;Can’t create object of Modules, but can create object of class&lt;/li&gt;
  &lt;li&gt;We can include multiple modules in a single class, but can’t include classes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To achieve multiple inheritance, we can include as many modules in a class. The same methods will be overriden by latest implementation. Let’s take a example -&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/class-modules-2.png&quot; alt=&quot;class-inheritance-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here module A is included in &lt;code class=&quot;highlighter-rouge&quot;&gt;class C&lt;/code&gt; and so when method &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; is called upon &lt;code class=&quot;highlighter-rouge&quot;&gt;class C&lt;/code&gt; it results printing &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;A&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now let’s consider this example -&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/class-modules-3.png&quot; alt=&quot;class-inheritance-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here we have two modules &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt;. And when these two are included in &lt;code class=&quot;highlighter-rouge&quot;&gt;class C&lt;/code&gt;, because both define same method &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; and module &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; is included after A - the program output is &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;B&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And that’s how we can include multiple modules in same class.&lt;/p&gt;

&lt;p&gt;I hope this was useful!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Multiple_inheritance&quot;&gt;The Diamond problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">In this post we will learn about multiple inheritance in ruby.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/multiple-Inheritance-home-image.png" /></entry><entry><title type="html">Resolve early termination of worker in Rails</title><link href="http://localhost:4000/remove-stale-pid/" rel="alternate" type="text/html" title="Resolve early termination of worker in Rails" /><published>2022-12-12T00:00:00+05:30</published><updated>2022-12-12T00:00:00+05:30</updated><id>http://localhost:4000/remove-stale-pid</id><content type="html" xml:base="http://localhost:4000/remove-stale-pid/">&lt;p&gt;&lt;em&gt;In this post we will resolve the error - Early termination of puma worker&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note - The reason described below is one of the cause, it is quite possible to reproduce this issue due to another reason.&lt;/p&gt;

&lt;p&gt;Let’s begin.&lt;/p&gt;

&lt;p&gt;Few days ago, like every normal day I started dev environment rails server and suddenly server log flooded
with error message - &lt;code class=&quot;highlighter-rouge&quot;&gt;early-termination-of-worker&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I did not understand at the time why it has happened as I did nothing different. Oh, but there was one thing to note - 
I had to abruptly shut down mac the day before. Was it even related?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yes, it was!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While shutting down mac, postgres server was also abruptly closed - leading to &lt;code class=&quot;highlighter-rouge&quot;&gt;stale postmaster.pid&lt;/code&gt; file in the
system. And the other day when I was trying to start rails server, it was unable to connect to postgres server. The 
reason was postgres server was unable to start as system had &lt;code class=&quot;highlighter-rouge&quot;&gt;stale postmaster.pid&lt;/code&gt; reference.&lt;/p&gt;

&lt;p&gt;If you are stuck at how I find out the reason, here it is -&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/stale-postmaster-pid-error.png&quot; alt=&quot;postgres-stale-postmaster-pid-error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So after knowing the problem, answer was straight forward - &lt;strong&gt;Go and delete postmaster.pid file&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to do it?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I use postgres desktop application, so these were steps for me -&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open terminal &amp;amp; navigate to Postgres directory. You can find postgres directory by opening postgres app and clicking 
on server settings option. My path was - &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/Users/swapnil/Library/Application Support/Postgres/var-13&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;List all files in the directory and check if postmaster.pid file is present.
    &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Go ahead and remove postmaster.pid -
    &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postmaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;That’s it. After this step your postgres server should be running &amp;amp; so rails server will be able to connect to it.&lt;/p&gt;

&lt;p&gt;P.S. - If you installed postgres via different method then solution steps would be different for you.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Thanks. Cheers!&lt;/p&gt;</content><author><name>swapnil</name></author><summary type="html">In this post we will resolve the error - Early termination of puma worker.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/stale-postmaster-pid-error.png" /></entry><entry><title type="html">Allow HTTPS traffic via AWS Load balancer and EC2</title><link href="http://localhost:4000/allow-https-traffic/" rel="alternate" type="text/html" title="Allow HTTPS traffic via AWS Load balancer and EC2" /><published>2021-04-07T00:00:00+05:30</published><updated>2021-04-07T00:00:00+05:30</updated><id>http://localhost:4000/allow-https-traffic</id><content type="html" xml:base="http://localhost:4000/allow-https-traffic/">&lt;p&gt;In this post we will achieve passing only https traffic to EC2 via application load balancer.&lt;/p&gt;

&lt;p&gt;Pre-requisites:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;running EC2 instance&lt;/li&gt;
  &lt;li&gt;SSL certificate added to AWS Certificate Manager&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;p&gt;First we need to setup an AWS Load balancer. If you have load balancer created, then please skip to 
&lt;a href=&quot;#skip-step&quot;&gt;this step&lt;/a&gt;&lt;br /&gt;
AWS provides three types of LB - application, network and classic, while 
AWS itself promotes application LB for Modern web applications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws-lb-types.png&quot; alt=&quot;aws-load-balancer-types&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Create Application Load Balancer&lt;/h4&gt;

    &lt;ol&gt;
      &lt;li&gt;Open the Amazon EC2 console at &lt;a href=&quot;https://console.aws.amazon.com/ec2/&quot; target=&quot;_blank&quot;&gt; https://console.aws.amazon.com/ec2/ &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;On the navigation pane, open CREATE LOAD BALANCER.&lt;/li&gt;
      &lt;li&gt;Choose Create for Application Load Balancer.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Adding listener configuration&lt;/h4&gt;

    &lt;p&gt;We need to add where load balancer is listening. We also need to specify what action should be taken, but it is covered
later in the post as it has a pre-requisite task. 
We will listen from both ports 80 and 443.&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;For port 443 (HTTPS) - On AWS console, for port choose HTTPS and for port choose 443.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;For port 80 (HTTP) - On AWS console, for protocol choose HTTP and for port choose 80.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Configure Security Settings&lt;/h4&gt;

    &lt;p&gt;AWS Certificate Manager (ACM) is the preferred tool to provision and store server certificates. If you previously 
stored a server certificate using IAM, you can deploy it to your load balancer.
From Certificate type dropdown choose Choose a certificate from ACM (recommended). Select Certificate from Certificate 
name dropdown.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Adding VPC and security groups&lt;/h4&gt;

    &lt;p&gt;Add appropriate VPC and security groups to your ALB&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Adding target group&lt;/h4&gt;

    &lt;p&gt;Create new target group with protocol (HTTP) and port (80). For health check keep default settings or assign any other
route your application has, it will be used for periodically checking health of target group. Use this target group to
forward your traffic from listener port 443 (From the above steps).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lb-health-check.png&quot; alt=&quot;load-balancer-health-check&quot; /&gt;&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4&gt;Listeners &amp;amp; targets settings&lt;/h4&gt;

    &lt;p&gt;Open listeners edit option and do changes for following&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;For port 80 (HTTP) - Open edit option. For Default action(s), choose Redirect to. Choose HTTPS &amp;amp; 443 and Original host, path, query 
from dropdown. This will redirect all traffic on port 80 to port 443 (https) on same host.&lt;/li&gt;
      &lt;li&gt;For port 443 (HTTPS) - Open edit option. Select protocol HTTPS and port 443. For Default action(s), choose Forward 
to and then select your ALB target group from the drop-down menu. For Default SSL certificate, choose From ACM
(recommended) and then choose the ACM certificate.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;div id=&quot;skip-step&quot;&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h5&gt;Already have Application Load Balancer up and running, then&lt;/h5&gt;

    &lt;ol&gt;
      &lt;li&gt;In the navigation pane, choose Load Balancers and then choose your Application Load Balancer.&lt;/li&gt;
      &lt;li&gt;Choose Add listener.&lt;/li&gt;
      &lt;li&gt;For Protocol, choose HTTPS.&lt;/li&gt;
      &lt;li&gt;For port, choose 443.&lt;/li&gt;
      &lt;li&gt;For Default action(s), choose Forward to, and then select your ALB target group from the drop-down menu.&lt;/li&gt;
      &lt;li&gt;For Default SSL certificate, choose From ACM (recommended) and then choose the ACM certificate.&lt;/li&gt;
      &lt;li&gt;Choose Save.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are operating classic load balancer, then the process is slightly different. For classic LB, please refer to this
guide - &lt;a href=&quot;https://aws.amazon.com/premiumsupport/knowledge-center/associate-acm-certificate-alb-nlb/&quot; target=&quot;_blank&quot;&gt;https://aws.amazon.com/premiumsupport/knowledge-center/associate-acm-certificate-alb-nlb/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;h4&gt;Note&lt;/h4&gt;
&lt;p&gt;Make sure to apply proper security groups and subnet configuration to allow traffic only from expected load balancer
otherwise EC2 instance would be still accessible via http to end user.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancer-getting-started.html&quot; target=&quot;_blank&quot;&gt;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancer-getting-started.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/premiumsupport/knowledge-center/associate-acm-certificate-alb-nlb/&quot; target=&quot;_blank&quot;&gt;https://aws.amazon.com/premiumsupport/knowledge-center/associate-acm-certificate-alb-nlb/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">In this post we will achieve passing only https traffic to EC2 via application load balancer.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/aws-icon.png" /></entry><entry><title type="html">Rails 6.1 - adds defaults value to enum</title><link href="http://localhost:4000/rails-add-default-to-enum/" rel="alternate" type="text/html" title="Rails 6.1 - adds defaults value to enum" /><published>2020-07-04T00:00:00+05:30</published><updated>2020-07-04T00:00:00+05:30</updated><id>http://localhost:4000/rails-add-default-to-enum</id><content type="html" xml:base="http://localhost:4000/rails-add-default-to-enum/">&lt;p&gt;How do we define enums? Pretty much like&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:proposed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:written&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:published&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here what is the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;status&lt;/code&gt; for newly created object of class Book? It would be &lt;code class=&quot;highlighter-rouge&quot;&gt;proposed&lt;/code&gt;, as is the first value 
from enums. What if we need a default enum value to be set to newly created objects?&lt;/p&gt;

&lt;p&gt;Well we can achieve it using
database default value constraint, but it will not be assigned until object is saved to database i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;Book.new.status&lt;/code&gt;
will not reflect &lt;code class=&quot;highlighter-rouge&quot;&gt;database default-value constraint&lt;/code&gt; as it is yet to be saved to database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rails 6.1 added support to define default value for enum. Declaring like&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:proposed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:written&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:published&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;_default: :published&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now new object of class Book will show value for column &lt;code class=&quot;highlighter-rouge&quot;&gt;status&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;published&lt;/code&gt; and not proposed.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;published&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;More example&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Blog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:inprogress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:complete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;_default: :inprogress&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Blog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;inprogress&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rails &lt;a href=&quot;https://github.com/rails/rails/pull/39820&quot;&gt;master PR&lt;/a&gt; which adds _default enum by &lt;code class=&quot;highlighter-rouge&quot;&gt;kamipo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">How do we define enums? Pretty much like</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/rails-6.jpeg" /></entry><entry><title type="html">Rails 6 - Managing API keys using ‘credentials’</title><link href="http://localhost:4000/rails-6-credentials/" rel="alternate" type="text/html" title="Rails 6 - Managing API keys using 'credentials'" /><published>2020-07-04T00:00:00+05:30</published><updated>2020-07-04T00:00:00+05:30</updated><id>http://localhost:4000/rails-6-credentials</id><content type="html" xml:base="http://localhost:4000/rails-6-credentials/">&lt;p&gt;How do you manage application secret keys? We cannot commit them in Version Control System (like github), it is too dangerous.&lt;/p&gt;

&lt;p&gt;In the era of docker-kubernetes we make them available as environment variables using kubernetes secrets &amp;amp; then application
code picks up from there. This way is okay but becomes lengthy when number of secrets keys goes up.&lt;/p&gt;

&lt;p&gt;Let’s talk about rails credentials now - the way for managing secret keys in the rails eco system itself. How different
this approach is? Well, it stores secret keys in application code itself, but those are encrypted and needs a master key to
decrypt. So, we can place just one secret key i.e. master key outside of VCS. Isn’t it good?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create/edit credentials&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'VIM'&lt;/span&gt; rails credentials:edit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create two files &lt;code class=&quot;highlighter-rouge&quot;&gt;credentials.yml.enc&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;master.key&lt;/code&gt; and open up decrypted &lt;code class=&quot;highlighter-rouge&quot;&gt;credentials.yml.enc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;aws:
   access_key_id: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AWSACCESSKEYID&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;secret_access_key: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AWSSECRETACCESSKEY&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Used as the base secret for all MessageVerifiers in Rails, including the one protecting cookies.&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;secret_key_base:
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This file will be encrypted again before saving. Note do not commit &lt;code class=&quot;highlighter-rouge&quot;&gt;master.key&lt;/code&gt; file. The only key that would stored 
out of VCS is master key. There are multiple ways to achieve it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Accessing these in rails environment as&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:aws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AWSACCESSKEYID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AWSSECRETACCESSKEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;adding-environment-wise-credentials&quot;&gt;Adding Environment wise Credentials&lt;/h3&gt;

&lt;p&gt;We can also keep dev, staging &amp;amp; production env wise separate credential files. Let’s create it for development environment as -&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It will open up in a default editor like&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;aws:
   access_key_id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;secret_access_key: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Put in secrets in here &amp;amp; then can be simply accessed in application as&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:aws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEVELOPMENT_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEVELOPMENT_ACCESS_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The best thing I liked was this&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/development-credentials.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even if you forget to remove secrets &lt;code class=&quot;highlighter-rouge&quot;&gt;key file&lt;/code&gt; it will no be added to VCS as rails has moved it to &lt;code class=&quot;highlighter-rouge&quot;&gt;gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Saeloun &lt;a href=&quot;https://blog.saeloun.com/2019/10/10/rails-6-adds-support-for-multi-environment-credentials.html&quot;&gt;Blog&lt;/a&gt; on rails credentials&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Medium &lt;a href=&quot;https://medium.com/@kirill_shevch/encrypted-secrets-credentials-in-rails-6-rails-5-1-5-2-f470accd62fc&quot;&gt;Blog&lt;/a&gt; on environment wise credentials&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">How do you manage application secret keys? We cannot commit them in Version Control System (like github), it is too dangerous.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/lock5.png" /></entry><entry><title type="html">Setting up Rails Performance dashboard with influxdb and grafana</title><link href="http://localhost:4000/rails-grafana-dashboard/" rel="alternate" type="text/html" title="Setting up Rails Performance dashboard with influxdb and grafana" /><published>2020-05-02T00:00:00+05:30</published><updated>2020-05-02T00:00:00+05:30</updated><id>http://localhost:4000/rails-grafana-dashboard</id><content type="html" xml:base="http://localhost:4000/rails-grafana-dashboard/">&lt;p&gt;When application gets stable at some point, we try to improve things we built for a while now. And improving performance
tops the list for me. Application performance is a large concept which can be measured with different number of parameters.
It also depends on underlying infrastructure.&lt;/p&gt;

&lt;p&gt;So here we will setup very simple and minimalistic performance dashboard for a Rails application which will help us monitor
 controller action runtime, database query runtime and view rendering runtime. Let’s start&lt;/p&gt;

&lt;p&gt;Pre-requisites&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;influxdb: &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.8/introduction/install/&quot;&gt;install&lt;/a&gt; unless is_influxdb_installed?&lt;/li&gt;
  &lt;li&gt;grafana: &lt;a href=&quot;https://grafana.com/docs/grafana/latest/&quot;&gt;install&lt;/a&gt; unless is_grafana_installed?&lt;/li&gt;
  &lt;li&gt;Rails app&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Now add gem &lt;code class=&quot;highlighter-rouge&quot;&gt;influxdb-rails&lt;/code&gt; gem to Rails application Gemfile and run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt;. To get things up run
    &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;influxdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;This will create initialzer config/initializers/influxdb_rails.rb, which allows configuration of this gem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We need one infuxdb database to store performance time series data, which eventually will be used by grafana dashboard.
 Open influxdb cosnole by running &lt;code class=&quot;highlighter-rouge&quot;&gt;influx&lt;/code&gt;. If you face issue of connection refused, make sure &lt;code class=&quot;highlighter-rouge&quot;&gt;influxd&lt;/code&gt; is running. 
 Once console is accessible create a database. I’m creating database named ‘rails-dev’ for now.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;We need to tell our rails application what database it should look for to store data. If it is going to use database service
 from another instance, we must provide hostname. For all this, open influxdb initializer file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For database name -&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rails-dev&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you are going to use a hosted influxdb instance then provide its address here&lt;/p&gt;

&lt;p&gt;For hostname -&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;host-name.com/8086&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point we are set with storing performance metrics data into influxdb ‘rails-dev’.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Check if grafana installed is working. Open &lt;a href=&quot;http://localhost:3005&quot;&gt;http://localhost:3005&lt;/a&gt;. Recheck if port number is
appropriate. You can verify port number and other details of grafana from ‘grafana.ini’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let’s import a simple dashboard in grafana. We will use already created dashboard for the rails app. Navigate to import screen &amp;amp; paste this board id &lt;code class=&quot;highlighter-rouge&quot;&gt;10428&lt;/code&gt;. Grafana will update
configuration and import the board. That’s it. Import is pretty simple and straight forward.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/grafana_import_step1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we are all prepared to see live performance metrics of our application. After some requests grafana dashboard will 
look something like&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/grafana-dashboard.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;References -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influxdata/influxdb-rails&quot;&gt;influxdb-rails&lt;/a&gt; gem&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.8/introduction/install/&quot;&gt;influxdb&lt;/a&gt; installation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/grafana/latest/&quot;&gt;grafana&lt;/a&gt; installation&lt;/li&gt;
  &lt;li&gt;grafana &lt;a href=&quot;https://grafana.com/docs/grafana/latest/reference/export_import/#importing-a-dashboard&quot;&gt;import dashboard&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influxdata/influxdb-rails/tree/master/sample-dashboard&quot;&gt;sample-dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>swapnil</name></author><summary type="html">When application gets stable at some point, we try to improve things we built for a while now. And improving performance tops the list for me. Application performance is a large concept which can be measured with different number of parameters. It also depends on underlying infrastructure. So here we will setup very simple and minimalistic performance dashboard for a Rails application which will help us monitor controller action runtime, database query runtime and view rendering runtime. Let’s start</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/grafana-dashboard.png" /></entry></feed>